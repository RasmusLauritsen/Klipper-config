[include mainsail.cfg]

[mcu]
# Obtain definition by "ls -l /dev/serial/by-id/" or
# Obtain definition by "ls -l /dev/serial/by-path/"
serial: /dev/serial/by-path/platform-fd840000.usb-usb-0:1:1.0

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 10000
max_z_velocity: 15
max_z_accel: 500
square_corner_velocity: 6.0

# Values inspired by:
# https://github.com/Klipper3d/klipper/blob/master/config/example-corexy.cfg
# https://github.com/VoronDesign/Voron-0/blob/Voron0.2r1/Firmware/bigtreetech-skr-mini-e3-v3.0.cfg
# https://github.com/austinhrin/Voron-V0.1-Klipper-Config/blob/main/printer.cfg
# https://github.com/FYSETC/FYSETC-Voron-0.2-Pro/blob/Pro_R1_1.1/0.2/Firmware%26OS/printer.cfg

# Fysetc's values that came with my kit:
# kinematics: corexy
# max_velocity: 500
# max_accel: 10000
# max_z_velocity: 15
# max_z_accel: 500
# square_corner_velocity: 6.0


#####################################################################
#   X/Y Stepper Settings   X=B   Y=A
#####################################################################
[stepper_x]
step_pin: PC12
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: !PC10                                                      # Check motor direction in link above. If inverted, remove ! before PC13
enable_pin: !PD2
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9 degree stepper motor, 200 is for 1.8 degree stepper motors
#endstop_pin: ^PA3
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 40                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
interpolate: False
run_current: 0.7
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: PB3                                                       # YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 100                                                  # this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

[stepper_y]
step_pin: PC15
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: !PC13                                                      # Check motor direction in link above. If inverted, remove ! before PC1
enable_pin: !PA10
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9�?degree stepper motor, 200 is for 1.8�?stepper motors
#endstop_pin: ^PA2
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 40                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC14
interpolate: False
run_current: 0.7
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^PA9                                                      # YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 100                                                  # this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: PB2
dir_pin: PC5	                                                    # Remove the ! before PB8 if motor direction is inverted.
enable_pin: !PB10
rotation_distance: 8                                                # For T8x8 lead screw
#rotation_distance: 2                                               # For T8x2 lead screw
microsteps: 32
endstop_pin: ^PA3
position_endstop: 120                                             # Overwrite by running Z_ENDSTOP_CALIBRATE. https://docs.vorondesign.com/build/startup/startup.html?model=v0&step=8&interface=mainsail
position_max: 120
position_min: -1.5
homing_speed: 20
second_homing_speed: 5.0
homing_retract_dist: 5.0

[tmc2209 stepper_z]
uart_pin: PC4
#tx_pin: PA2
#uart_address: 2
interpolate: False
# For FYSETC 42HSC1404B-200N8
run_current: 0.3
hold_current: 0.05
sense_resistor: 0.110
stealthchop_threshold: 0                                             # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle


#####################################################################
#   Extruder
#####################################################################
[mcu head]
serial: /dev/serial/by-path/platform-fd8c0000.usb-usb-0:1:1.0

[extruder]
step_pin: head:PB15
dir_pin: !head:PB14             # Add ! if moving opposite direction
enable_pin: !head:PB1
full_steps_per_rotation: 200    # Set to 200 for 1.8 degree motor, set to 400 for 0.9 degree stepper motor
rotation_distance: 22.8536      # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10               # For Mini Afterburner
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: head:PA0
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: head:PA1
min_temp: 0
max_temp: 300
min_extrude_temp: 170  # set to 0 when calibrating e-steps.
max_extrude_only_distance: 150
max_extrude_cross_section: 1.5
pressure_advance: 0.5   # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040
# control: pid            # Do PID calibration
# pid_Kp: 33.217
# pid_Ki: 12.302
# pid_Kd: 22.422

[tmc2209 extruder]
uart_pin: head:PA9
interpolate: False
run_current: 0.6
#diag_pin: head:PA8   
sense_resistor: 0.220
stealthchop_threshold: 9999                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder

#####################################################################
# Fan Control
#####################################################################
[heater_fan hotend_fan]
pin:head:PB4
max_power:1.0
shutdown_speed:0.0
cycle_time:0.5
hardware_pwm:false
kick_start_time:0.10
off_below:0.1
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[multi_pin part_cooling]
pins: head:PB9,head:PB11

[fan]
pin: multi_pin:part_cooling

#####################################################################
# Temperature Sensor
#####################################################################
[temperature_sensor M36_MCU]
sensor_type: temperature_mcu
sensor_mcu: head
min_temp: 0
max_temp: 105


#####################################################################
# Neopixel
#####################################################################
[neopixel left_rgb]     
pin: head:PB13
chain_count: 1
color_order: GRB
initial_RED: 0.1
initial_GREEN: 0.1
initial_BLUE: 0.1

[neopixel right_rgb]
pin: head:PB0
chain_count: 1
color_order: GRB
initial_RED: 0.1
initial_GREEN: 0.1
initial_BLUE: 0.1

#####################################################################
#   ADXL345
#####################################################################

[adxl345]
cs_pin: head:PA4
#   The SPI enable pin for the sensor. This parameter must be provided.
#spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 5000000.
spi_bus: spi1
#spi_software_sclk_pin:PA5
#spi_software_mosi_pin:PA7
#spi_software_miso_pin:PA6
#   See the "common SPI settings" section for a description of the
#   above parameters.
axes_map: -x, z, y
#   The accelerometer axis for each of the printer's X, Y, and Z axes.
#   This may be useful if the accelerometer is mounted in an
#   orientation that does not match the printer orientation. For
#   example, one could set this to "y, x, z" to swap the X and Y axes.
#   It is also possible to negate an axis if the accelerometer
#   direction is reversed (eg, "x, z, -y"). The default is "x, y, z".
rate: 3200
#   Output data rate for ADXL345. ADXL345 supports the following data
#   rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
#   not recommended to change this rate from the default 3200, and
#   rates below 800 will considerably affect the quality of resonance
#   measurements.

[resonance_tester]
accel_chip: adxl345
accel_per_hz: 75  # default is 75
probe_points:
    60, 60, 20  # an example

# Used before first PID_CALIBRATION and SAVE_CONFIG. Uncommented afterwards.
# [extruder]
# control: pid            # Do PID calibration
# pid_Kp: 33.217
# pid_Ki: 12.302
# pid_Kd: 22.422


#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
heater_pin: PC8
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PB0
smooth_time: 3.0
#max_power: 0.6                                                      # Only needed for 100w pads
min_temp: 0
max_temp: 120
# Used before first PID_CALIBRATION and SAVE_CONFIG. Uncommented afterwards.
# control: pid                                                         # Do PID calibration after initial checks
# pid_kp: 50.824
# pid_ki: 2.054
# pid_kd: 314.476


#####################################################################
#   Fan Control
#####################################################################
[temperature_fan CM68]
pin: PB4
max_power: 1.0
min_temp: 10
max_temp: 100
kick_start_time: 0.5
off_below: 0.1
control: watermark
sensor_type: temperature_host
#fan_speed: 1.0
target_temp: 60                 # Start fan at 60C


#####################################################################
#   Temperature Sensor
#####################################################################
[temperature_sensor Catalyst_MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor Chamber]
sensor_type:  NTC 100K MGB18-104F39050L32
sensor_pin:   PA1

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################
[idle_timeout]
#gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 600       # Fysetc has 1800
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.


# Homing override. 
# One may use this mechanism to run a series of g-code commands in place of a G28 found in the normal g-code input. 
# This may be useful on printers that require a specific procedure to home the machine.
[homing_override]
axes: xyz
set_position_z: 0
gcode:
   G90
   G0 Z5 F600
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}


# Tool to help adjust bed leveling screws. One may define a
# [bed_screws] config section to enable a BED_SCREWS_ADJUST g-code
# command.
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right


#####################################################################
#   Neopixel & lights
#####################################################################
[neopixel board_rgb]        # Måske en port på bundkortet, hvis man tilføjer en LED stripe. Ser ud til at være 4-pin stik over B-stepper driveren.
pin: PC9
chain_count: 35
color_order: GRB
initial_RED: 0.2
initial_GREEN: 0.2
initial_BLUE: 0.2


#####################################################################
#   Display - and menu items
#####################################################################
[display]
lcd_type: sh1106
click_pin: ^!PA15
i2c_bus: i2c1a
i2c_mcu: mcu
encoder_pins: ^PC1, ^PC2
kill_pin: ^!PB12
vcomh: 60
x_offset: 2
#sda: pb9
#scl: pb8

[neopixel display_led]
pin: PC6
color_order: GRB
initial_RED: 0
initial_GREEN: 0.05
initial_BLUE: 0.2

# Klipper ships with an OctoPrint entry in the LCD menu which does not work with Mainsail.
[menu __main __octoprint]
type: disabled


#####################################################################
#   Filament Runout Sensor
#####################################################################
[filament_switch_sensor RunoutSensor]
pause_on_runout: False
runout_gcode: PAUSE
insert_gcode: RESUME
switch_pin: PA2


#####################################################################
# Macros
#####################################################################
[gcode_macro PRINT_START]
## *** THINGS TO UNCOMMENT: ***
## Nevermore (if you have one)
gcode:
  # Fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer and sets absolute positioning
  G28                                                 # Full home (XYZ)
  G90                                                 # Absolute position

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
  {% if params.BED|int > 90 %}
    M106 S255                                         # Turn on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                    # Turn on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                  # Go to center of the bed
    M190 S{target_bed}                                # Set target temp for the bed
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Wait for chamber temp

  # If the bed temp is not over 90c it skips the heatsoak and just heats up to set temp with a 1 min soak.
  {% else %}
    G1 X{x_wait} Y{y_wait} Z15 F9000                  # Go to center of the bed
    M190 S{target_bed}                                # Set target temp for the bed
    #G4 P300000                                        # Wait 5 min for the bedtemp to stabilize
  {% endif %}

  # Heats up the hotend up to target via slicer
  M107                                                # Turn off partcooling fan
  M109 S{target_extruder}                             # Heat hotend to print temp

  # Create a prime line and starts the print
  G1 X5 Y4 Z0.4 F10000                                # Go to starting point
  G1 X115 E20 F1000                                   # Primeline


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
 
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    G91                            ; relative positioning                      


    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 5.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600    ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X0 F3600          ; park nozzle at rear
    M84


[gcode_macro LOAD_FILAMENT]
gcode:
   M109 T0 S210                   ; set extruder temp and wait 
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute
[gcode_macro _HOME_X]
gcode:
    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    # Wait for StallGuard registers to clear
    M400
    G90


[gcode_macro _HOME_Y]
gcode:
    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200
    # Wait for StallGuard registers to clear
    M400
    G90
    

[gcode_macro _HOME_Z]
gcode:
    G90
    G28 Z
    G1 Z30

[virtual_sdcard]
path: /home/linaro/printer_data/gcodes/


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.768
#*# pid_ki = 11.680
#*# pid_kd = 18.967
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 52.301
#*# pid_ki = 2.193
#*# pid_kd = 311.844
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 80.4
#*# shaper_type_y = mzv
#*# shaper_freq_y = 57.0